          CHANGELOG FOR VISH2+1
        =========================
        
Ver 1.10.0
------------------------
- Aug. 13, 2012       -
------------------------
.: Output integrated density*r^n over the transverse plane to the 4th columns of results/ecc-init-r_power-#.dat. Also the power now starts with 0.


Ver 1.9.0
------------------------
- Apr. 11, 2012       -
------------------------
.: Output chemical potential for different fluid cell at different temperatures at first time step. For later time steps, chemical potential for only one fluid cell is outputted instead of all. 

   
Ver 1.8.0
------------------------
- Apr. 08, 2012       -
------------------------
.: Initial eccentricities calculated using different r-weight are now calculated and outputted to results/ecc-xxx files.


Ver 1.7.1
------------------------
- Apr. 02, 2012       -
------------------------
.: This version supports an additional decoupling temperature parameter Edec0 in the Vishydro.inp file. When the flag IFreez is set to non zero value, all fluid cells between Edec and Edec0 at the initial time will be considered as part of the freeze-out surface.


Ver 1.6.29RC10
------------------------
- Jan. 10, 2012       -
------------------------
Code files changed: VISH2p1V1.6.29RC10.for and InputEOS-1.3.for

.: Equation of state table format has been standardized. The standard EOS tables contain four different data files. They are stored in /EOS/EOS_tables/. 
  (*) "EOS_PST.dat" contains the relations between energy density and pressure, entropy density, and temperature. The format is e, P(e), S(e), T(e). 
  (*) "EOS_particletable.dat" contains the list of stable particle species under strong interaction. Each particle is associated with a chemical potential, \mu_i(T). In this file, the number in the first row tells how many stable particle species are there in this table. Start from row 2, first column represents the order of the chemical potential of stable particles in "EOS_Mu.dat", second are the Monte-Carlo numbers of the particles, third are the names of the particles, fourth are their lifetimes and fifth state whether they are stable or not. 
  (*) "EOS_Mu.dat" contains the relation between energy density and chemical potential, \mu_i(T). 
  (*) "coeff.dat" contains the six parameters for extrapolation of p(e), s(e), T(e) when e is exceed the upper limit in "EOS_PST.dat". 

.: InputEOS-1.3.for is modified to read in standard format of EOS tables. (see ChangLogsInputEOS.txt for details)

.: The most changes are in the common blocks. (search CSHEN and chemical potential for details)

.: I delete the redundant codes in VISH2+1 for the chemical potential for EOS6.

.: Add the temperature evolution output. VISH2+1 will output temperature evolution along x axis into "Temp_evo.dat" file. (search "93" for the output file flow number)

.: Add the output for hydro parameters to "VISH2p1_tec.dat". (still need to be improved)


Ver 1.6.29RC9
------------------------
- Nov, 28. 2011       -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.2.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC6.for >>
.: Bug fix (Bjoern & Chun): In checkPiAll, the comparison between TrPi2 should be
"If (TrPi2<-max(eStr*accuracy,smallness)) Then"
instead of
"If (abs(TrPi2)<-max(eStr*accuracy,smallness)) Then"

Ver 1.6.29RC8
------------------------
- July, 06. 2011       -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.2.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC6.for >>
.: The chemical potential table output for all freeze-out surface cells is replaced by a single list since the freeze-out surface is along the same temperature.
.: Initialization-1.03.for has been modified; now the read-in energy density is in unit GeV/fm^3.
.: Bug fix: pi(tau,y) is outputted to the OSCAR file; time index starts from 0 instead of 1. Also, the bug that Vx and Vy are not passed to the OSCARbodyoutput function is fixed.


Ver 1.6.29RC7 (major)
------------------------
- May, 21. 2011        -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.2.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC6.for >>
.: The root finding in subroutine dpSc8 has changed from quadESolver to invertFuncD + findEdHook.


Ver 1.6.29RC6
------------------------
- May, 20. 2011        -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.2.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC6.for >>
.: The trace anomaly definitions in the checkPiAll subroutine and in InputFun-1.29RC6.for have changed from e-3p to max(e-3p, e*1D-3).
.: The relative accuracy in quadESolver function is reduced to 1D-6, and max number of iterations is raised to 300.


Ver 1.6.29RC5(6)
------------------------
- May, 11. 2011        -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.1.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC5.for >>
.: The Fermi-Dirac treatment for the boundary is now directly applied to T(mu,nu) (RC6:and pi(mu,nu)), instead of on their source terms only. One consequence is that R0Bdry must be taken larger and Aeps be smaller in order to make sure the effect does not influence the physical calculation.
.: In the dpSc8 subroutine, the PScT## and DPc## tensors are set to zero when ideal calculations are performed (that is, in If(ViscousC>1D-6) block).


Ver 1.6.29RC4
------------------------
- March, 15. 2011      -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.1.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC4.for >>
.: In checkAllPi function, the parameter maxPiRatio is used to tighten or loosen the comparisions.


Ver 1.6.29RC3
------------------------
- March, 10. 2011      -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.1.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC3.for >>
.: The check on transversality of pi in checkAllPi function now is done by comparing pi*u with energy density, instead of (previously) trace anomaly.

Ver 1.6.29RC
------------------------
- March, 07. 2011      -
------------------------
<< Compile with: PhyBdary-1.10.for InputEOS-1.1.for OSCARoutput.for Arsenal-0.7.for Initialization-1.02.for InputFun-1.29RC.for >>
.: Use regulatePi from InputFun-1.29RC to obstain better stabilities.
.: No regulations on Pi by default --- only when checkPiAll function returns with failure should the regulation be performed. The checks made in checkPiAll function is looser compared to those performed in regulatePi.
.: Adaptive regulation: regulation is endless until it passes checkPiAll check; however, the count of total number of regulations is passes to regualtePi to adaptively increase the strength of regulation.

Ver 1.6.26
<< Based on 1.6.18should, just to be clean and bug-free >>

Ver 1.6.25

<< For test purpose; modified from 1.6.24. >>
<< Compiled with PhyBdary-1.10.for InputEOS-1.1.for InputFun-1.26test3.for Initialization-1.01.for OSCARoutput.for Arsenal-0.7.for >>
The version 1.6.25Mod seems to work.

Ver 1.6.23
------------------------
- February, 17. 2011   -
------------------------
<< Based on 1.6.20. Compile with: InputFun-1.25.for, PhyBdary-1.10.for, InputEOS-1.1.for, Initialization.for OSCARoutput.for, Arsenal-0.7.for (Arsenal-0.4,0.6 compatible). >>
.: Subroutine printPi renamed to printMore which now outputs Pi and T and many more.



Ver 1.6.22
------------------------
- February, 17. 2011   -
------------------------
<< Compile with: InputFun-1.24.for, PhyBdary-1.10.for, InputEOS-1.1.for, Initialization.for OSCARoutput.for, Arsenal-0.7.for. >>
.: UPShasta2 algorithm is replaced by QShasta algorithm from Arsenal-0.7. However, Ulrich thinks there's something wrong with the new algorithm and the old algorithm will be used in the following versions. (What's been tested is that the two Shasta without anti-diffusing term agree.)


Ver 1.6.20 should be the same as 1.6.18

Ver 1.6.18should (major, working)
<< Compiled with PhyBdary-1.10.for InputEOS-1.1.for InputFun-1.25.for Initialization.for OSCARoutput.for Arsenal-0.7.for >>


Ver 1.6.18
------------------------
- December, 24. 2010   -
------------------------
.: The extrapolation for v is done on U1 and U2 now, instead of on Vx and Vy.


Ver 1.6.17
------------------------
- December, 18. 2010   -
------------------------
.: The extrapolation for Vx and Vy is changed back to direct extrapolation, however, with additional norm check: if (Vx,Vy) has norm bigger than 1, than it is renormalized to 1.


Ver 1.6.15
------------------------
- December, 12. 2010   -
------------------------
.: All initialization is moved to external subroutine InitializeAll in Initialization.for.


Ver 1.6.12 (major, working)
------------------------
- December, 02. 2010   -
------------------------
.: Some control coded using ViscousC added. Now the code runs 35% faster in the ideal case.


Ver 1.6.11 (working)
------------------------
- December, 02. 2010   -
------------------------
.: Timing code added. Now the program output how long it takes to run the subroutine Mainpro.


Ver 1.6.10 (working but not robust)
------------------------
- November, 17. 2010   -
------------------------
<< Compile with: InputFun-1.22.for, PhyBdary-1.10.for, InputEOS-1.1.for, OSCARoutput.for, Arsenal-0.4.for. >>
.: All files are declared as "REPLACE" instead of "NEW", there is no need to clean the subdirectories between the runs now.
.: Instead of smearing and extrapolating Vx and Vy directly, the length of the vector (Vx,Vy) is now mapped to [0,inf) first then the smearing process is done (search for VxTmp). The anisotropy file is fine now. <***Note*** This is wrong.>
.: Bug fix: the conditions used to write freeze-out info along X and Y axes are changed to be ones determined using absI and absJ instead of I and J. Also, absI=0 means data along y axis, not x-axis (previouly).
.: The initial eccentricity using entropy profiles is outputted to results/ecc-init-sd.dat.
.: The "overlap area" (pi*sqrt(<x^2>*<y^2>)) is outputted to results/overlap.dat.
.: In Gaussian initialization, the shifted energy changed from 1D-10 to 1D-30.
.: Ed is shifted up by 1E-30 after initialization.


Ver 1.6.5 (working, But see the note below)
------------------------
- November, 09. 2010   -
------------------------
.: The calls to invertNewtonL from Table-0.3.for are replaced by the calls to invertFunctionD from Arsenal-0.4.for (together with "external" declaration for SEOSL7).
Note: Any previous version, including this version, generates possible NaN's in anisotropy file for bumpy initial conditions.


Ver 1.6.3 (major, working)
------------------------
- November, 04. 2010   -
------------------------
<< Compile with: InputFun-1.21.for, PhyBdary-1.10.for, InputEOS-1.1.for, OSCARoutput.for, TableFunctions-0.3.for. >>
.: Use azSpectra-1.2.7 to calculate the corresponding spectra.
.: Support to read entropy density profile (Initial/InitialSd.dat) added.
.: Subroutine "intialES2" renamed to "initialES2".
.: The constant 155500 is replaced by macro EOSDATALENTH (also in InputEOS.for). It needs to be compiled with option "-cpp".
.: Added support to use Glauber initial condition to initialize entropy density, in which case the variable "Ek" (in GeV/fm^3) is used as "Sk" (in fm^(-3)).
.: Bug fix: In the initialization stage, there is a call to PEPS to generate pressure and thus energy momentum tensor. But PEPS accepts energy density in the unit GeV/fm^3, not the unit of Ed, fm^-4. Therefore ee=Ed(i,j,k) is wrong, and it is replaced by ee=Ed(i,j,k)*HbarC. Search for "[ee]=GeV/fm^3" for where it is changed.


Ver 1.6.2
------------------------
- November, 04. 2010   -
------------------------
.: The calculation for the centers (before the calculation of the eccentricity moments) are now on the whole plane instead of within the freeze-out surface.
.: The calculation of the eccentricity moments are now with respect to the calculated center (without assuming that the center is at origin).


Ver 1.6.1
------------------------
- November, 03. 2010   -
------------------------
.: Time evolution of moments of spatial eccentricity are outputted to results/ecc-evolution.dat using snapshotEccentricity subroutine.
.: The file results/OSCAR2008H.dat is created only if IOSCAR is set to true.
.: The calculations for eccentricity are changed back to be on the whole transverse plane, by convention.


Ver 1.6.0
------------------------
- November, 03. 2010   -
------------------------
.: Added a new EOS 7 which reads EOS table from EOS/s95p-PCE/EOS_converted.dat and EOS/pichem1.dat. The original s95p-PCE EOS table is first read and the interpolated and re-outputted to a new table with equal spacing (EOS_coverted.dat) by RegularEOS.for. Set IEOS = 7 in Vishydro.inp to use this EOS. The EOS functions are PEOSL7, SEOSL7, and TEOSL7. The interpolation are done in two pieces separately: with the table range they are done using interpCubic subroutine in TableXXX.for; below table range (e<0.001 GeV/fm^3) p and s are linearly interpolated to 0 and T is interpolated using a power rule to 0, using the last data in the table.
.: Add several output after call to function anisotrop10 to output the detail evolution of the driving terms during the hydro evolution.

Ver 1.5.10
------------------------
- November, 01. 2010   -
------------------------
.: Add one parameter IOSCAR to control whether to output OSCAR formated results. The actual code is in the OSCARoutput.for.
.: Change transportPi6 function by adding two extra input parameters, VRelaxT and VRelaxT0, the relaxation time for shear and bulk viscosity. The relaxation times are calculated in ViscousCoefi8. This ensures that VRelaxT and VRelaxT0 maintain their values in the mainpro so that they
can be outputted to OSCAR file.
.: Add a parameter IVisflag, which control to use constant or temperature dependence shear viscosity.


Ver 1.5.9 (major, working)
------------------------
- October, 29. 2010    -
------------------------
.: Bug fixed: the format for eccentricity output in results/ecc.dat changed to ensure that datas are outputted to the same line each time.


Ver 1.5.8
------------------------
- October, 28. 2010    -
------------------------
.: Spelling fixed: the variable "IEni" is renamed to "IEin", according to Vishydro.inp.
.: The call to readFromCML (from InputFun.for) is replaced by readFromCML2. Now the program first read parameters from the parameter file (Vishydro.inp), the from the CML. Those parameters that are not specified from CML keep their value read from the file. The new way of specifying parameters is "varaible=value", for example:
./VISH2p1V1.5.8.e IEOS=2 Init=0 x^2=4.0 y^2=6.0 Ecen=10.0 Edec=0.088 eta_s=0.08
.: The absolute values of initial eccentricities are now also outputted to results/ecc.dat.
.: For the code that output freeze-out surface along either x or y direction, the checking conditions have been changed from (X.eq.0.0) to (I.eq.0) and (Y.eq.0.0) to (J.eq.0).


Ver 1.5.7 (working)
------------------------
- October, 27. 2010    -
------------------------
.: Bug fixed: to restrict the eccentricity calculation to be within freeze-out surface, the correct command to continue a loop in Fortran is "cycle", not "continue". The corrections are made both in mainpro and anisotropy10 subroutines.
.: Eccentricity calculated using r^n weight function are also calculated. Eccentricity calculated using both definitions (r^2 and r^n weighted) are outputted to results/ecc.dat.


Ver 1.5.6
------------------------
- October, 27. 2010    -
------------------------
.: Bug fixed: the calculation for the "center" wasn't averaged previously.


Ver 1.5.5
------------------------
- October 22, 2010     -
------------------------
.: The calculation of initial eccentricity is now forced to be inside the freeze-out surface.


Ver 1.5.4 (working)
------------------------
- October, 21. 2010    -
------------------------
.: Initial eccentricity information, together with several moments that determine the direction of minor axes (different for different moments) are outputted.


Ver 1.5.3 (working)
------------------------
- October, 16. 2010    -
------------------------
.: Calls to SECTIO3 are changed back to SECTIO2. Instead, the main loop in FreezeoutPro9 is rewritten to ensure symmetric picking of freeze-out cells.
.: The calls to interpolation function P3 are replaced by P4 which supports symmetric interpolation (no bias over the vertices of the cubic).
.: All typos "NTD" are corrected to "NDT".
.: The IEOS2Dec variable is correctly passed to FreezeoutPro9 subroutine.


Ver 1.5.2
------------------------
- October, 16. 2010    -
------------------------
.: In the calculation of anisotropies, the calculation is now only done inside the freeze-out surface (which is outputted to file 92).


Ver 1.5.1
------------------------
- October, 16. 2010    -
------------------------
.: All typos "NXD" and "NYD" are corrected to "NDX" and "NDY".
.: Calls to SECTIO2 are replaced by SECTIO3 that can do the freeze-out algorithm correctly.
.: Output format for X(N) and Y(N) are changed.
.: The subroutine CUBCAL is called twice with different orientations of the cubic to guarantee accuracy.
.: Subroutine FreezeoutPro8 renamed to FreezeoutPro9.


Ver 1.5.0
------------------------
- October, 15. 2010    -
------------------------
.: Freeze-out procedure is now performed on the whole plane. (Array with range -2:NX has been changed to NX0:NX; subroutine SECTIO has been replaced by SECTIO2).
.: Variables MAX,MAY have been replaced by their equivalences: NX,NY.
.: Variable readedFromCML renamed to readFromCML.
.: Checking code deleted (search previous version for the code between "goto 888").
.: Calculation for average of source terms in subroutine anisotrop9 has been commented out.


Ver 1.4.21s (major, with minor bug)
------------------------
- November 02. 2010    -
------------------------
.: Compile with PhyBdary-1.03.for, InputFun-1.20.for.
.: The IEOS2Dec variable is correctly passed to FreezeoutPro9 subroutine. (from 1.5.3)
.: Variable readedFromCML renamed to readFromCML. (from 1.5.0)
.: IDebug set to 0 before calling quadESolver.
*Note*: This is the last working version for calculations on 1/4 of the whole plane. It should be built with InputFun-1.14.for and PhyBdary-1.03.for.
*Note*: It turns out that there is a hidden bug, to fix it change the code in line 517 to
517  ee = Ed(i, j, k)*HbarC
and the code in line 519 to
519  pp = PEPS(Cn, ee)/HbarC
after that, add a new line right after that
ee = Ed(i, j, k).
This "bug" only affects calculations when u^0 is not initialized to 1.


Ver 1.4.21 (major, working except for EOS 2, use 1.4.21t instead, see below)
------------------------
- October 07. 2010     -
------------------------
.: When V's are calculated after the root finding in e, there is an intermedia variable DM whch is used as the denominator of an expression. This value used to be popped up to 1e-30 to avoid 0/0; now it is popped up to 1e-10.
.: For EOS 2, the variable IEOS2dec does not reach inside the FreezeoutPro8 subroutine, making it generates wrong decoupling temperature. The version 1.4.21t "fix" this by enforce IEOS2dec to be 1. This is not the correct way to fix it though, leave this to later versions.


Ver 1.4.20
------------------------
- July, 14. 2010       -
------------------------
.: The constant in subroutine EntropyTemp3 that makes energy density non zero is changed from 1e-100 to 1e-30.
.: When solve for v_perp, the numerical solver is switched from NEWTON2 to quadESolver.
.: EOS data (e,p,p/e) is outputted to EOS.dat under movie folder.


Ver 1.4.19
------------------------
- July, 13. 2010       -
------------------------
.: In subroutine ViscousCoefi8, denominators used to calculate VCBeta and VRelax are given a nonzero value when too small. etaTtp is given a small value when it is too small (log(etaTtp) is needed later).
.: The root finding algorithm is switched from NEWTON2 to direct root finding temporarily. This works for EOS I ONLY!!


Ver 1.4.18
------------------------
- July, 10. 2010       -
------------------------
.: The tanh regulation is also applied to the initialization: now T(mu,nu) is initialized as T_eq(mu,nu)+regulated(pi(mu,nu)).


Ver 1.4.17
------------------------
- July, 09. 2010       -
------------------------
.: The loop used to calculate eccentricity (anisotropy) and other quantities now has bounds from -NXPhy to NXPhy and -NYPhy to NYPhy instead of 0 to those bounds. This makes the program slower but increase the accuracy for anisotropy greatly.


Ver 1.4.16
------------------------
- July, 08. 2010       -
------------------------
.: The checking if the source term (search for "Invalid PScT terms!") is NaN now happens after time=TT0+0.8 instead of time=0.8.
.: The format using to output freeze out surfaces changes from 3 decimals to 7 decimals. Also the file SurfaceX.dat and SurfaceY.dat are structured to seven columns, one group of data per row.


Ver 1.4.15
------------------------
- June, 28. 2010       -
------------------------
.: Chun modified EOSL-PCE to make the curve Cs vs e smoother (EOS 6).


Ver 1.4.14
------------------------
- June, 24. 2010       -
------------------------
.: Interface to regulatePi subroutine changed according to version InputFun-1.08.


Ver 1.4.13
------------------------
- June, 24. 2010       -
------------------------
.: Now U0 is first calculated on physics lattice than being extrapolated, compared to previously that Vx and Vy are first being extrapolated then calcuate U0.


Ver 1.4.12
------------------------
- June, 23. 2010       -
------------------------
.: Interface to regulatePi subroutine changed.


Ver 1.4.11-2
-----------------------
- June, 4. 2010       -
-----------------------
.: All R0 are replaced by R0Bdry. All other versions between 1.4.7 and 1.4.11-2 are experimental.


Ver 1.4.7
-----------------------
- May, 11. 2010       -
-----------------------
.: Many debugging codes added, but there are additional outputs only when a quantitiy become NaN.
.: In EntropyTemp3 subroutine, Ed is taken to be at least 1e-15 large.


Ver 1.4.6
-----------------------
- May, 11. 2010       -
-----------------------
.: Lattice size (LS) and R0 used for boundary regulation (R0Bdry) are now parameters. Both can be read from Vishhydro.inp or from command line parameters.
.: A bug in calculating D2Ln in subroutine dpSc8 is fixed. It should be divided by DY, not DX.


Ver 1.4.4
-----------------------
- May, 4. 2010        -
-----------------------
.: Initialization for Gaussian initial condition has been moved to a separated subroutine, initialES2Gaussian, together with required entropy initialization for EOS I.


Ver 1.4.1
-----------------------
- Apr, 4. 2010        -
-----------------------
.: Parameters NX (NX0), NY (NY0) are now just NXPhy+5 (-5) and NYPhy+5 (-5) respectively; also, MAX=NX, MAY=NY.


Ver 1.3.9
-----------------------
- Mar, 31. 2010       -
-----------------------
.: Viscosity calculation is now done in the subroutine ViscousCTemp function.
.: Change the format for initial energy density from a list of (x,y,Ed) to a data block. The columns of the data block correspond to y values and rows correspond to x values. The unit of the energy density data is fm^(-4).


Ver 1.3.6
-----------------------
- Mar, 17. 2010       -
-----------------------
.: The call to function regulatePi now has parameters NXPhy0, NXPhy, NYPhy0, and NYPhy.


Ver 1.3.5
-----------------------
- Feb, 02. 2010       -
-----------------------
.: A bug in Gaussian initial condition is fixed.


Ver 1.3.4
-----------------------
- Jan, 18. 2010       -
-----------------------
.: Change MaxT to a variable and initialize it as 40.0/dT_1. This should give enough steps for time evolution
   because no fireball so far uses more than 20 fm/c to evolve. Even if for time<0.6 fm/c, dT is shrinked to
   1/10 of its original value, this just means that the time steps it takes to evolve is effectively
   the same as a fireball that evolves 6 fm/c longer.


Ver 1.3.3
-----------------------
- Jan, 13. 2010       -
-----------------------
.: More Pi's (should be all of them used in the equation of T and the source term S) are regulated
   in subroutine dpSc8 subroutine (find them by searching "PiRegu").


Ver 1.3.1
-----------------------
- Jan, 13. 2010       -
-----------------------
.: An additional parameter "Time" is passed to function "regulatePi".


Ver 1.3
-----------------------
- Jan, 12. 2010       -
-----------------------
.: Function readInputFromCML changed to a subroutine. The result is return thru common block readedFromCML.
.: A bug that regulatePi function should be called outside the loop (see code) is found and fixed.
.: A bug that regulatePi should call with parameters NX0,NX,... is found and fixed.


Ver 1.15
-----------------------
- Jan, 11. 2010       -
-----------------------
.: Unknown dT re-scaling bug fixed (Chun).
.: Program "RegulatePi.for" is re-named back to "InputFun.for".
.: The variable (and the name of the associated common block) "IEin" should be "IEni".
.: NXD,NYD,NTD should be declared as integer.
.: The return type of "readInputFromCML" function is changed to integer and the corresponding if statement is also modified.
.: Entrace to "regulatePi" function added, with modified Pi(mu,nu) tensor named "PiRegu##".
.: Function "prepareInputFun" added.


Ver 1.1
-----------------------
- Jan, 09. 2010       -
-----------------------
.: Can read input from command line arguments (only the frequently used ones).
.: The variable "IGlauberCGC" is renamed to "IInit".
.: Support Gaussian initial function. See updated Vishydro.inp for usage.
.: New variable dT added.
.: Program "InputFun.for" is renamed to "RegulatePi.for".
.: Function "InputFunc" is renamed to "DetermineR0".
.: In the initialization of energy subroutine, the error message
	"This option is not supported by this version" is changed more specifically
	to "IInit=", IInit, "is not supported by this version".
.: In the input file Vishydro.inp, the word "diffussion" is corrected to "diffusion",
	"contant" to "constant", "initializion" to "initialization", and "dirction" to
	"direction".


