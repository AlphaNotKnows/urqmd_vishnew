#!/usr/bin/env python3

import argparse
import collections
import itertools
import sys
import os
import numpy as np
import h5py
import math
#Qn_to_compute = np.array([1, 2, 3, 4, 5, 6,7,8])
#Qn_to_compute = np.array([2, 3, 4])
#n0=0.5
headfile=open("../EVENTS_HEADFILE.dat","r")
temp=headfile.read()
#print(type(temp))
Nevent=int(temp)
headfile.close()
for kk in range(0,Nevent):
#    for jjj in range(1,101):
      try:
         data=np.loadtxt("../Outputbyevent/particle_Event{}.txt".format(kk))
      except FileNotFoundError as e:
         continue
      else:
         try:
            vabs_ID=data.T[0][:]
         except IndexError as ee:
            continue
         else:
            vabs_ID=data.T[0][:]
            charge=np.absolute(data.T[1][:])
            mass=np.array(data.T[2][:])
            pT=np.absolute(data.T[3][:])
            eta=data.T[5][:]
#            midrapidity = (eta > -0.5) & (eta < 0.5)
            pz = pT*np.sinh(eta)
            energy = np.sqrt(mass*mass + pT*pT + pz*pz)
            exp2y = (energy + pz)/(energy - pz)
            midrapidity = ((np.e)**(-0.2) < exp2y) & (exp2y < (np.e)**(0.2))
#            pT=(data.T[3][:]*data.T[3][:]+data.T[4][:]*data.T[4][:])**0.5
#            absolute_p=(pT*pT+data.T[5][:]*data.T[5][:])**0.5
#            energy=(absolute_p*absolute_p+mass*mass)**0.5
#            exp2y = (energy + data.T[5][:])/(energy - data.T[5][:])
#            midrapidity = (1/np.e < exp2y) & (exp2y < np.e)
#            eta=0.5*np.log((absolute_p+data.T[5][:])/(absolute_p-data.T[5][:]))
            ############## RPs ##################

            lstep = 30
            # pion
            for pp in range (lstep):
                vdNch_deta_pion = np.count_nonzero((charge>0) & midrapidity & (pp*0.1 < pT) & (pT < (pp+1)*0.1)& (vabs_ID == 211)) #!!!!!!!!!!!!!!!!!!!
                # output the Qn
                phi66 = open('vdNch_deta_pion.txt', 'a')
                phi66.write(str(vdNch_deta_pion))
                phi66.write("\n")
                phi66.close()
            # kaon
            for pp in range (lstep):
                vdNch_deta_pion = np.count_nonzero((charge>0) & midrapidity & (pp*0.1 < pT) & (pT < (pp+1)*0.1)& (vabs_ID == 321))  #!!!!!!!!!!!!!!!!!!!
                # output the Qn
                phi66 = open('vdNch_deta_kaon.txt', 'a')
                phi66.write(str(vdNch_deta_pion))
                phi66.write("\n")
                phi66.close()
                # proton
            # pion
            for pp in range (lstep):
                vdNch_deta_pion = np.count_nonzero((charge>0) & midrapidity & (pp*0.1 < pT) & (pT < (pp+1)*0.1)& (vabs_ID == 2212))  #!!!!!!!!!!!!!!!!!!!
                # output the Qn
                phi66 = open('vdNch_deta_proton.txt', 'a')
                phi66.write(str(vdNch_deta_pion))
                phi66.write("\n")
                phi66.close()
            # anti-proton
            for pp in range (lstep):
                vdNch_deta_pion = np.count_nonzero((charge>0) & midrapidity & (pp*0.1 < pT) & (pT < (pp+1)*0.1)& (vabs_ID == -2212))  #!!!!!!!!!!!!!!!!!!!
                # output the Qn
                phi66 = open('vdNch_deta_anti-proton.txt', 'a')
                phi66.write(str(vdNch_deta_pion))
                phi66.write("\n")
                phi66.close()



